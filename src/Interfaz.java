
import javax.swing.JOptionPane;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Emiliano
 */
public class Interfaz extends javax.swing.JFrame {

    Pelicula pelicula = new Pelicula();


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
       
    }                    
    
    
    public Interfaz() {

        initComponents();

        this.setLocationRelativeTo(null);
        JOptionPane.showMessageDialog(null, "Recuerde Cargar lo guardado antes de guardar nuevamente, puede perder todos los cambios realizados anteriormente");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        txtAlquiler = new javax.swing.JTextField();
        txtSocio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        eliminar = new javax.swing.JButton();
        Alquilar = new javax.swing.JButton();
        Devolver = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Buscar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        Cargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Título");

        jLabel2.setText("Precio Alquiler");

        jLabel3.setText("Código de socio");

        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });
        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTituloKeyTyped(evt);
            }
        });

        txtAlquiler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAlquilerKeyTyped(evt);
            }
        });

        txtSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSocioActionPerformed(evt);
            }
        });
        txtSocio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSocioKeyTyped(evt);
            }
        });

        jLabel4.setText("Código");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        Alquilar.setText("Alquilar");
        Alquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlquilarActionPerformed(evt);
            }
        });

        Devolver.setText("Devolver");
        Devolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DevolverActionPerformed(evt);
            }
        });

        jLabel5.setText("BlockBuster");

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        Buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BuscarKeyTyped(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Cargar.setText("Cargar");
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSocio)
                                .addComponent(txtTitulo)
                                .addComponent(txtAlquiler)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                            .addGap(51, 51, 51)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eliminar)
                                    .addComponent(agregar))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Alquilar)
                                    .addGap(2, 2, 2))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(234, 234, 234)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(Guardar)
                        .addGap(46, 46, 46)
                        .addComponent(Cargar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(Devolver)
                        .addGap(2, 2, 2)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(agregar)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(eliminar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(Alquilar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Devolver)
                    .addComponent(Buscar)
                    .addComponent(Guardar)
                    .addComponent(Cargar))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        if (txtTitulo.getText().equalsIgnoreCase("") || txtAlquiler.getText().equalsIgnoreCase("") || txtCodigo.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Código, título y precio de alquiler deben estar llenos para agregar la película, por favor verifique");
        } else {
            int index = pelicula.busquedaBinaria(Integer.parseInt(txtCodigo.getText()));
            if (index >= 0) {
                JOptionPane.showMessageDialog(null, "Pelicula ya registrada con este código, mediante el nombre de: " + pelicula.peliculas[index].titulo);
            }
            pelicula.agregarPelicula(new Pelicula(Integer.parseInt(txtCodigo.getText()), txtTitulo.getText().toLowerCase(), Integer.parseInt(txtAlquiler.getText()), -2, true));
            txtCodigo.setText("");
            txtSocio.setText("");
            txtTitulo.setText("");
            txtAlquiler.setText("");
        }

    }//GEN-LAST:event_agregarActionPerformed

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed

    }//GEN-LAST:event_txtTituloActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if (txtCodigo.getText().length() > 4) {
            evt.consume();
        }
        if (c < '0' || c > '9')
            evt.consume();
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSocioActionPerformed

    private void txtSocioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSocioKeyTyped
        char c = evt.getKeyChar();
        if (txtSocio.getText().length() > 4) {
            evt.consume();
        }
        if (c < '0' || c > '9')
            evt.consume();
    }//GEN-LAST:event_txtSocioKeyTyped

    private void txtTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyTyped
        char c = evt.getKeyChar();
        if (txtTitulo.getText().length() > 29) {
            evt.consume();
        }
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && c != ' ' && (c < '0' || c > '9'))
            evt.consume();
    }//GEN-LAST:event_txtTituloKeyTyped

    private void txtAlquilerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlquilerKeyTyped
        char c = evt.getKeyChar();
        if (txtAlquiler.getText().length() > 7) {
            evt.consume();
        }

        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != ',') {
            evt.consume();
        }
        if (evt.getKeyChar() == '.' && txtAlquiler.getText().contains(",")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAlquilerKeyTyped

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        if (txtCodigo.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "El código de la película a eliminar está vacio");

        } else {
            int index = pelicula.busquedaBinaria(Integer.parseInt(txtCodigo.getText()));
            if (index == -1) {
                JOptionPane.showMessageDialog(null, "El código de la película a eliminar no existe, por favor verifique");

            } else {
                if (pelicula.peliculas[index].socio != -2) {
                    JOptionPane.showMessageDialog(null, "La pelicula se encuentra alquilada, no se puede pre-Eliminar");
                    txtCodigo.setText("");
                    txtSocio.setText("");
                    txtTitulo.setText("");
                    txtAlquiler.setText("");
                } else {
                    if (pelicula.peliculas[index].activa == false) {
                        JOptionPane.showMessageDialog(null, "Ya la pelicula fue pre-eliminada antes, Presione Guardar para realizar los cambios de forma definitiva");
                    } else {

                        pelicula.peliculas[index].activa = false;
                        JOptionPane.showMessageDialog(null, "Pelicula: " + pelicula.peliculas[index].codigo + ") " + pelicula.peliculas[index].titulo + " pre-eliminada con exito, presione Guardar para realizar los cambios de forma Permanente");
                        txtCodigo.setText("");
                        txtSocio.setText("");
                        txtTitulo.setText("");
                        txtAlquiler.setText("");
                    }
                }
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void AlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlquilarActionPerformed
        if (txtCodigo.getText().equalsIgnoreCase("") || txtSocio.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(null, "Código o Código de socio se encuentra vacio");

        } else {

            int index = pelicula.busquedaBinaria(Integer.parseInt(txtCodigo.getText()));

            if (index == -1) {
                JOptionPane.showMessageDialog(null, "La pelicula no fue encontrada, el codigo no existe");
            } else {
                int sociox = pelicula.peliculas[index].socio;
                if (pelicula.peliculas[index].activa == false) {

                    JOptionPane.showMessageDialog(null, "Pelicula preEliminada, no se puede alquilar");
                } else if (sociox == -2) {
                    pelicula.peliculas[index].socio = Integer.parseInt(txtSocio.getText());
                    JOptionPane.showMessageDialog(null, "Pelicula: " + pelicula.peliculas[index].titulo + " alquilada con exito por el usuario: " + pelicula.peliculas[index].socio);
                    txtCodigo.setText("");
                    txtSocio.setText("");
                    txtTitulo.setText("");
                    txtAlquiler.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Pelicula ya alquilada anteriormente por el usuario: " + pelicula.peliculas[index].socio);
                    txtCodigo.setText("");
                    txtSocio.setText("");
                    txtTitulo.setText("");
                    txtAlquiler.setText("");
                }

            }

        }
    }//GEN-LAST:event_AlquilarActionPerformed

    private void DevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DevolverActionPerformed
        if (txtCodigo.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Codigo de la pelicula se encuentra vacio, por favor verifique");
        } else {
            int index = pelicula.busquedaBinaria(Integer.parseInt(txtCodigo.getText()));

            if (index == -1) {
                JOptionPane.showMessageDialog(null, "Pelicula no encontrada, el código no existe");
                txtCodigo.setText("");
                txtSocio.setText("");
                txtTitulo.setText("");
                txtAlquiler.setText("");
            } else {

                int sociox = pelicula.peliculas[index].socio;
                if (pelicula.peliculas[index].activa == false) {
                    JOptionPane.showMessageDialog(null, "La pelicula ha sido eliminada, no se puede devolver");
                } else if (sociox == -2) {
                    JOptionPane.showMessageDialog(null, "La pelicula no ha sido alquilada, por favor verifique");

                } else {
                    pelicula.peliculas[index].socio = -2;
                    JOptionPane.showMessageDialog(null, "La pelicula fue devuelta con exito");
                    txtCodigo.setText("");
                    txtSocio.setText("");
                    txtTitulo.setText("");
                    txtAlquiler.setText("");
                }

            }

        }

    }//GEN-LAST:event_DevolverActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
       



        if (txtTitulo.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Al menos una o dos palabras deben estar escritas en el titulo para realizar la busqueda");
        } else {
            Pelicula[] Encontradas = pelicula.ConsultaPorPalabras(txtTitulo.getText().toLowerCase());
            for (int i = 0; i < Encontradas.length; i++) {
                if (Encontradas[i] == null) {
                    break;
                } else {
                    JOptionPane.showMessageDialog(null, "Codigo: " + Encontradas[i].codigo + ". Titulo: " + Encontradas[i].titulo);
                }
            }
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void BuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarKeyTyped

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        pelicula.eliminacionFisica();
        pelicula.GuardarEnDisco();
        JOptionPane.showMessageDialog(null, "Guardado con exito");
    }//GEN-LAST:event_GuardarActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        pelicula.LeerDisco();
        JOptionPane.showMessageDialog(null, "Cargado con exito");
    }//GEN-LAST:event_CargarActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alquilar;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Cargar;
    private javax.swing.JButton Devolver;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton agregar;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtAlquiler;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtSocio;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
